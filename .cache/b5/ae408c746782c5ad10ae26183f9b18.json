{"id":"G1rY","dependencies":[{"name":"C:\\Users\\v\\Desktop\\FriedEggsGit3\\package.json","includedInParent":true,"mtime":1691178592854}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DigitalGlitch=void 0;var t={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\t\\tvoid main() {\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\t\\t}\",fragmentShader:\"\\n\\n\\t\\tuniform int byp; //should we apply the glitch ?\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform sampler2D tDisp;\\n\\n\\t\\tuniform float amount;\\n\\t\\tuniform float angle;\\n\\t\\tuniform float seed;\\n\\t\\tuniform float seed_x;\\n\\t\\tuniform float seed_y;\\n\\t\\tuniform float distortion_x;\\n\\t\\tuniform float distortion_y;\\n\\t\\tuniform float col_s;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\n\\t\\tfloat rand(vec2 co){\\n\\t\\t\\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\t\\t\\tif(byp<1) {\\n\\t\\t\\t\\tvec2 p = vUv;\\n\\t\\t\\t\\tfloat xs = floor(gl_FragCoord.x / 0.5);\\n\\t\\t\\t\\tfloat ys = floor(gl_FragCoord.y / 0.5);\\n\\t\\t\\t\\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\\n\\t\\t\\t\\tfloat disp = texture2D(tDisp, p*seed*seed).r;\\n\\t\\t\\t\\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\\n\\t\\t\\t\\t\\tif(seed_x>0.){\\n\\t\\t\\t\\t\\t\\tp.y = 1. - (p.y + distortion_y);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tp.y = distortion_y;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\\n\\t\\t\\t\\t\\tif(seed_y>0.){\\n\\t\\t\\t\\t\\t\\tp.x=distortion_x;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tp.x = 1. - (p.x + distortion_x);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tp.x+=disp*seed_x*(seed/5.);\\n\\t\\t\\t\\tp.y+=disp*seed_y*(seed/5.);\\n\\t\\t\\t\\t//base from RGB shift shader\\n\\t\\t\\t\\tvec2 offset = amount * vec2( cos(angle), sin(angle));\\n\\t\\t\\t\\tvec4 cr = texture2D(tDiffuse, p + offset);\\n\\t\\t\\t\\tvec4 cga = texture2D(tDiffuse, p);\\n\\t\\t\\t\\tvec4 cb = texture2D(tDiffuse, p - offset);\\n\\t\\t\\t\\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\\n\\t\\t\\t\\t//add noise\\n\\t\\t\\t\\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\\n\\t\\t\\t\\tgl_FragColor = gl_FragColor+ snow;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tgl_FragColor=texture2D (tDiffuse, vUv);\\n\\t\\t\\t}\\n\\t\\t}\"};exports.DigitalGlitch=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":0}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":13}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":20}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":35}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":43}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":56}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":57}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":64}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":68}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":76}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":99,"column":2},"generated":{"line":1,"column":95}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":11,"column":0},"generated":{"line":1,"column":97}},{"source":"../static/shaders/DigitalGlitch.js","name":"DigitalGlitch","original":{"line":11,"column":6},"generated":{"line":1,"column":101}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":11,"column":22},"generated":{"line":1,"column":103}},{"source":"../static/shaders/DigitalGlitch.js","name":"uniforms","original":{"line":13,"column":4},"generated":{"line":1,"column":104}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":13,"column":14},"generated":{"line":1,"column":113}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":15,"column":8},"generated":{"line":1,"column":114}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":15,"column":20},"generated":{"line":1,"column":123}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":15,"column":22},"generated":{"line":1,"column":124}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":15,"column":29},"generated":{"line":1,"column":130}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":16,"column":8},"generated":{"line":1,"column":136}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":16,"column":17},"generated":{"line":1,"column":142}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":16,"column":19},"generated":{"line":1,"column":143}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":16,"column":26},"generated":{"line":1,"column":149}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":17,"column":8},"generated":{"line":1,"column":155}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":17,"column":15},"generated":{"line":1,"column":159}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":17,"column":17},"generated":{"line":1,"column":160}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":17,"column":24},"generated":{"line":1,"column":166}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":18,"column":8},"generated":{"line":1,"column":169}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":18,"column":18},"generated":{"line":1,"column":176}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":18,"column":20},"generated":{"line":1,"column":177}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":18,"column":27},"generated":{"line":1,"column":183}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":19,"column":8},"generated":{"line":1,"column":188}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":19,"column":17},"generated":{"line":1,"column":194}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":19,"column":19},"generated":{"line":1,"column":195}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":19,"column":26},"generated":{"line":1,"column":201}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":20,"column":8},"generated":{"line":1,"column":206}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":20,"column":16},"generated":{"line":1,"column":211}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":20,"column":18},"generated":{"line":1,"column":212}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":20,"column":25},"generated":{"line":1,"column":218}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":21,"column":8},"generated":{"line":1,"column":223}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":21,"column":18},"generated":{"line":1,"column":230}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":21,"column":20},"generated":{"line":1,"column":231}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":21,"column":27},"generated":{"line":1,"column":237}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":22,"column":8},"generated":{"line":1,"column":242}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":22,"column":18},"generated":{"line":1,"column":249}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":22,"column":20},"generated":{"line":1,"column":250}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":22,"column":27},"generated":{"line":1,"column":256}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":23,"column":8},"generated":{"line":1,"column":261}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":23,"column":24},"generated":{"line":1,"column":274}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":23,"column":26},"generated":{"line":1,"column":275}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":23,"column":33},"generated":{"line":1,"column":281}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":24,"column":8},"generated":{"line":1,"column":285}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":24,"column":24},"generated":{"line":1,"column":298}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":24,"column":26},"generated":{"line":1,"column":299}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":24,"column":33},"generated":{"line":1,"column":305}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":25,"column":8},"generated":{"line":1,"column":309}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":25,"column":17},"generated":{"line":1,"column":315}},{"source":"../static/shaders/DigitalGlitch.js","name":"value","original":{"line":25,"column":19},"generated":{"line":1,"column":316}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":25,"column":26},"generated":{"line":1,"column":322}},{"source":"../static/shaders/DigitalGlitch.js","name":"vertexShader","original":{"line":28,"column":4},"generated":{"line":1,"column":328}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":34,"column":4},"generated":{"line":1,"column":341}},{"source":"../static/shaders/DigitalGlitch.js","name":"fragmentShader","original":{"line":36,"column":4},"generated":{"line":1,"column":493}},{"source":"../static/shaders/DigitalGlitch.js","original":{"line":36,"column":20},"generated":{"line":1,"column":508}},{"source":"../static/shaders/DigitalGlitch.js","name":"exports","original":{"line":99,"column":2},"generated":{"line":1,"column":2375}},{"source":"../static/shaders/DigitalGlitch.js","name":"DigitalGlitch","original":{"line":99,"column":2},"generated":{"line":1,"column":2383}},{"source":"../static/shaders/DigitalGlitch.js","name":"DigitalGlitch","original":{"line":99,"column":2},"generated":{"line":1,"column":2397}}],"sources":{"../static/shaders/DigitalGlitch.js":"/**\r\n * RGB Shift Shader\r\n * Shifts red and blue channels from center in opposite directions\r\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\r\n * by Tom Butterworth / http://kriss.cx/tom/\r\n *\r\n * amount: shift distance (1 is width of input)\r\n * angle: shift angle in radians\r\n */\r\n\r\nconst DigitalGlitch = {\r\n\r\n    uniforms: {\r\n\r\n        'tDiffuse': { value: null }, //diffuse texture\r\n        'tDisp': { value: null }, //displacement texture for digital glitch squares\r\n        'byp': { value: 0 }, //apply the glitch ?\r\n        'amount': { value: 0.08 },\r\n        'angle': { value: 0.02 },\r\n        'seed': { value: 0.02 },\r\n        'seed_x': { value: 0.02 }, //-1,1\r\n        'seed_y': { value: 0.02 }, //-1,1\r\n        'distortion_x': { value: 0.5 },\r\n        'distortion_y': { value: 0.6 },\r\n        'col_s': { value: 0.05 }\r\n    },\r\n\r\n    vertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\t\tvoid main() {\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t}`,\r\n\r\n    fragmentShader: /* glsl */`\r\n\r\n\t\tuniform int byp; //should we apply the glitch ?\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform sampler2D tDisp;\r\n\r\n\t\tuniform float amount;\r\n\t\tuniform float angle;\r\n\t\tuniform float seed;\r\n\t\tuniform float seed_x;\r\n\t\tuniform float seed_y;\r\n\t\tuniform float distortion_x;\r\n\t\tuniform float distortion_y;\r\n\t\tuniform float col_s;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\r\n\t\tfloat rand(vec2 co){\r\n\t\t\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\t\t\tif(byp<1) {\r\n\t\t\t\tvec2 p = vUv;\r\n\t\t\t\tfloat xs = floor(gl_FragCoord.x / 0.5);\r\n\t\t\t\tfloat ys = floor(gl_FragCoord.y / 0.5);\r\n\t\t\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n\t\t\t\tfloat disp = texture2D(tDisp, p*seed*seed).r;\r\n\t\t\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\r\n\t\t\t\t\tif(seed_x>0.){\r\n\t\t\t\t\t\tp.y = 1. - (p.y + distortion_y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tp.y = distortion_y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\r\n\t\t\t\t\tif(seed_y>0.){\r\n\t\t\t\t\t\tp.x=distortion_x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tp.x = 1. - (p.x + distortion_x);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp.x+=disp*seed_x*(seed/5.);\r\n\t\t\t\tp.y+=disp*seed_y*(seed/5.);\r\n\t\t\t\t//base from RGB shift shader\r\n\t\t\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\r\n\t\t\t\tvec4 cr = texture2D(tDiffuse, p + offset);\r\n\t\t\t\tvec4 cga = texture2D(tDiffuse, p);\r\n\t\t\t\tvec4 cb = texture2D(tDiffuse, p - offset);\r\n\t\t\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\r\n\t\t\t\t//add noise\r\n\t\t\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\r\n\t\t\t\tgl_FragColor = gl_FragColor+ snow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgl_FragColor=texture2D (tDiffuse, vUv);\r\n\t\t\t}\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { DigitalGlitch };"},"lineCount":null}},"error":null,"hash":"9deaf319b33ebad569a647a93379909d","cacheData":{"env":{}}}